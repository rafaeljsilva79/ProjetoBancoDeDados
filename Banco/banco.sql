-- Tabela Vendedor
CREATE TABLE VENDEDOR(
CODIGO INTEGER,
NOME VARCHAR(60) NOT NULL,
CPF VARCHAR(14) NOT NULL UNIQUE,
TELEFONE VARCHAR(14) NOT NULL,
EMAIL VARCHAR(60) NOT NULL,
CONSTRAINT PK_CODIGO_VENDEDOR PRIMARY KEY(CODIGO)
);

-- Sequencia da tabela
CREATE SEQUENCE vendedor_seq START WITH 1 INCREMENT BY 1;

-- Gatilho da Sequencia
CREATE OR REPLACE TRIGGER vendedor_seq_tr
 BEFORE INSERT ON vendedor FOR EACH ROW
 WHEN (NEW.codigo IS NULL)
BEGIN
 SELECT vendedor_seq.NEXTVAL INTO :NEW.codigo FROM DUAL;
END;

-- Tabela Cliente
CREATE TABLE CLIENTE(
CODIGO INTEGER,
NOME VARCHAR(60)NOT NULL,
CPF VARCHAR(14) NOT NULL UNIQUE,
TELEFONE VARCHAR(14) NOT NULL,
EMAIL VARCHAR(60) NOT NULL,
DATANASCIMENTO VARCHAR(10) NOT NULL,
CONSTRAINT PK_CODIGO_CLIENTE PRIMARY KEY (CODIGO)
);

-- Sequencia da tabela
CREATE SEQUENCE cliente_seq START WITH 1 INCREMENT BY 1;

-- Gatilho da sequencia
CREATE OR REPLACE TRIGGER cliente_seq_tr
 BEFORE INSERT ON cliente FOR EACH ROW
 WHEN (NEW.codigo IS NULL)
BEGIN
 SELECT cliente_seq.NEXTVAL INTO :NEW.codigo FROM DUAL;
END;

CREATE TABLE ENDERECO(
ENDERECO_ID INTEGER,
CLIENTE_ID INTEGER,
RUA VARCHAR(60) NOT NULL,
NUMERO VARCHAR(10) NOT NULL,
BAIRRO VARCHAR(50) NOT NULL,
CIDADE VARCHAR(50) NOT NULL,
UF VARCHAR(50) NOT NULL,
CONSTRAINT PK_ENDERECO_ID PRIMARY KEY (ENDERECO_ID),
CONSTRAINT FK_CLIENTE_ID FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTE (CODIGO)
);

-- Sequencia da tabela
CREATE SEQUENCE endereco_seq START WITH 1 INCREMENT BY 1;

-- Gatilho da sequencia
CREATE OR REPLACE TRIGGER endereco_seq_tr
 BEFORE INSERT ON endereco FOR EACH ROW
 WHEN (NEW.endereco_id IS NULL)
BEGIN
 SELECT endereco_seq.NEXTVAL INTO :NEW.endereco_id FROM DUAL;
END;

CREATE TABLE PRODUTO(
CODIGO INTEGER,
DESCRICAO VARCHAR(50) NOT NULL,
VALOR DOUBLE PRECISION NOT NULL,
QTD DOUBLE PRECISION,
CONSTRAINT PK_PRODUTO_ID PRIMARY KEY (CODIGO)
);

-- Sequencia da tabela
CREATE SEQUENCE produto_seq START WITH 1 INCREMENT BY 1;

-- Gatilho da sequencia
CREATE OR REPLACE TRIGGER produto_seq_tr
 BEFORE INSERT ON produto FOR EACH ROW
 WHEN (NEW.codigo IS NULL)
BEGIN
 SELECT produto_seq.NEXTVAL INTO :NEW.codigo FROM DUAL;
END;

CREATE TABLE VENDA(
CODIGO INTEGER,
CLIENTE_ID INTEGER NOT NULL,
VENDEDOR_ID INTEGER NOT NULL,
DATA DATE NOT NULL,
VALORTOTAL DOUBLE PRECISION NOT NULL,
CONSTRAINT PK_VENDA_CODIGO PRIMARY KEY (CODIGO),
CONSTRAINT FK_VENDA_CLIENTE_ID FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTE (CODIGO),
CONSTRAINT FK_VENDA_VENDEDOR_ID FOREIGN KEY (VENDEDOR_ID) REFERENCES VENDEDOR (CODIGO)
);

-- Sequencia da tabela
CREATE SEQUENCE venda_seq START WITH 1 INCREMENT BY 1;

-- Gatilho da sequencia
CREATE OR REPLACE TRIGGER venda_seq_tr
 BEFORE INSERT ON venda FOR EACH ROW
 WHEN (NEW.codigo IS NULL)
BEGIN
 SELECT venda_seq.NEXTVAL INTO :NEW.codigo FROM DUAL;
END;

CREATE TABLE VENDA_ITEM(
CODVENDAITEM INTEGER,
CODIGO_VENDA INTEGER,
CODPRODUTO INTEGER,
QTD DOUBLE PRECISION NOT NULL,
VALOR DOUBLE PRECISION,
CONSTRAINT PK_VENDA_ITEM_CODVENDAITEM PRIMARY KEY (CODVENDAITEM),
CONSTRAINT FK_VENDA_ITEM_VENDA_ID FOREIGN KEY (CODIGO_VENDA) REFERENCES VENDA (CODIGO),
CONSTRAINT FK_VENDA_ITEM_CODPRODUTO FOREIGN KEY (CODPRODUTO) REFERENCES PRODUTO (CODIGO)
);

-- Sequencia da tabela
CREATE SEQUENCE venda_item_seq START WITH 1 INCREMENT BY 1;

-- Gatilho da sequencia
CREATE OR REPLACE TRIGGER venda_item_seq_tr
 BEFORE INSERT ON venda_item FOR EACH ROW
 WHEN (NEW.CODVENDAITEM IS NULL)
BEGIN
 SELECT venda_item_seq.NEXTVAL INTO :NEW.CODVENDAITEM FROM DUAL;
END;

CREATE TABLE INFO_VENDA(
CODIGO_VENDA INTEGER,
COD_CLIENTE INTEGER,
COD_VENDEDOR INTEGER,
CODPRODUTO INTEGER,
CONSTRAINT FK_INFO_VENDA_VENDA_ID FOREIGN KEY (CODIGO_VENDA) REFERENCES VENDA (CODIGO),
CONSTRAINT FK_INFO_VENDA_VENDEDOR_ID FOREIGN KEY (COD_VENDEDOR) REFERENCES VENDEDOR (CODIGO),
CONSTRAINT FK_INFO_VENDA_COD_CLIENTE FOREIGN KEY (COD_CLIENTE) REFERENCES CLIENTE (CODIGO),
CONSTRAINT FK_INFO_VENDA_CODPRODUTO FOREIGN KEY (CODPRODUTO) REFERENCES PRODUTO (CODIGO)
);

CREATE TABLE CONTA(
CODCONTA INTEGER,
CLIENTE_ID INTEGER NOT NULL,
DTCADASTRO DATE NOT NULL,
VALORTOTAL DOUBLE PRECISION NOT NULL,
CODVENDA INTEGER NOT NULL,
CONSTRAINT PK_CONTA_CODCONTA PRIMARY KEY (CODCONTA),
CONSTRAINT FK_CONTA_CLIENTE_ID FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTE (CODIGO),
CONSTRAINT FK_CONTA_CODVENDA FOREIGN KEY (CODVENDA) REFERENCES VENDA (CODIGO)
);

-- Sequencia da tabela
CREATE SEQUENCE conta_seq START WITH 1 INCREMENT BY 1;

-- Gatilho da sequencia
CREATE OR REPLACE TRIGGER conta_seq_tr
 BEFORE INSERT ON conta FOR EACH ROW
 WHEN (NEW.CODCONTA IS NULL)
BEGIN
 SELECT conta_seq.NEXTVAL INTO :NEW.CODCONTA FROM DUAL;
END;

CREATE TABLE CONTA_BK(
CODCONTA INTEGER,
CLIENTE_ID INTEGER,
VALORTOTAL DOUBLE PRECISION,
CODVENDA INTEGER);

CREATE OR REPLACE TRIGGER CONTA_BK
AFTER DELETE ON CONTA
for each row
begin
INSERT INTO CONTA_BK values (:NEW.CODCONTA,:NEW.CLIENTE_ID, :NEW.VALORTOTAL, :NEW.CODVENDA);
end;

